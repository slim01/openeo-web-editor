{"version":3,"sources":["webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/source/TileJSON.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/canvas/Map.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/source/Source.js"],"names":["__webpack_require__","d","__webpack_exports__","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmpTileCoord","TileGrid_TileGrid","options","zoomFactor","this","minZoom","undefined","resolutions_","resolutions","Object","asserts","array","a","b","origins","i","ii","length","zoomFactor_","maxZoom","origin_","origin","origins_","extent","ol_extent","tileSizes_","tileSizes","tileSize_","tileSize","common","extent_","fullTileRanges_","tmpSize_","sizes","map","size","z","tileRange","TileRange","Math","min","max","calculateTileRanges_","prototype","forEachTileCoord","zoom","callback","getTileRangeForExtentAndZ","minX","maxX","j","minY","jj","maxY","forEachTileCoordParentTileRange","tileCoord","opt_this","opt_tileRange","opt_extent","x","y","tileCoordExtent","getTileCoordExtent","floor","call","getExtent","getMaxZoom","getMinZoom","getOrigin","getResolution","getResolutions","getTileCoordChildTileRange","getTileRangeExtent","resolution","ol_size","getTileSize","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","coordinate","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","scale","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","ceil","tilecoord","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","math","fullTileRanges","Array","tilegrid_TileGrid","getForProjection","projection","tileGrid","getDefaultTileGrid","createForProjection","setDefaultTileGrid","wrapX","center","projectionExtent","extentFromProjection","worldWidth","worldsAway","createForExtent","opt_maxZoom","opt_tileSize","opt_corner","corner","Corner","TOP_LEFT","resolutionsFromExtent","createXYZ","opt_options","xyzOptions","proj","gridOptions","height","width","maxResolution","pow","half","Units","DEGREES","getMetersPerUnit","abstract","Error","getUid","VERSION","uidCounter_","obj","ol_uid","String","Layer_LayerRenderer","Observable","LayerRenderer","layer","layer_","__proto__","create","constructor","createLoadedTileFinder","source","tiles","tile","toString","forEachLoadedTile","forEachFeatureAtCoordinate","frameState","hitTolerance","getLayer","handleImageChange_","event","image","getState","ImageState","LOADED","renderIfReadyAndVisible","hasFeatureAtCoordinate","loadImage","imageState","ERROR","events","events_EventType","CHANGE","IDLE","load","getVisible","getSourceState","State","READY","changed","scheduleExpireCache","tileSource","canExpireCache","postRenderFunction","tileSourceKey","util","usedTiles","expireCache","viewState","bind","postRenderFunctions","push","updateUsedTiles","zKey","extend","manageTilePyramid","pixelRatio","currentZ","preload","opt_tileCallback","wantedTiles","tileResolution","tileQueue","getTile","TileState","getKey","isKeyQueued","enqueue","useTile","ol_Observable","Layer","Layer_CanvasLayerRenderer","CanvasLayerRenderer","renderedResolution","transform_","ol_transform","clip","context","rotation","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","save","canvas","beginPath","moveTo","lineTo","dispatchComposeEvent_","type","opt_transform","hasListener","transform","getTransform","render","Immediate","composeEvent","Event","dispatchEvent","forEachLayerAtCoordinate","thisArg","hasFeature","functions","postCompose","layerState","EventType","POSTCOMPOSE","preCompose","PRECOMPOSE","dispatchRenderEvent","RENDER","offsetX","dx1","dy1","sx","sy","angle","dx2","dy2","composeFrame","prepareFrame","POINT","LINE","createOrUpdate","getKeyZXY","fromKey","key","split","Number","hash","withinExtentAndZ","containsXY","_TileImage_js__WEBPACK_IMPORTED_MODULE_0__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_1__","XYZ","TileImage","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","transition","attributionsCollapsible","defaultOrder","getSquaredTolerance","getTolerance","renderFeature","_util_js__WEBPACK_IMPORTED_MODULE_0__","_ImageState_js__WEBPACK_IMPORTED_MODULE_1__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","_render_ReplayType_js__WEBPACK_IMPORTED_MODULE_3__","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","Point","renderPointGeometry","LineString","renderLineStringGeometry","Polygon","renderPolygonGeometry","MultiPoint","renderMultiPointGeometry","MultiLineString","renderMultiLineStringGeometry","MultiPolygon","renderMultiPolygonGeometry","GeometryCollection","renderGeometryCollectionGeometry","Circle","renderCircleGeometry","feature1","feature2","parseInt","tolerance","replayGroup","geometry","style","feature","fillStyle","getFill","strokeStyle","getStroke","circleReplay","getReplay","getZIndex","CIRCLE","setFillStrokeStyle","drawCircle","textStyle","getText","textReplay","TEXT","setTextStyle","addDeclutter","drawText","squaredTolerance","listener","loading","imageStyle","getImage","getImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","getGeometryFunction","simplifiedGeometry","getSimplifiedGeometry","renderer","getRenderer","renderGeometry","geometryRenderer","getType","GEOMETRY_COLLECTION","replay","DEFAULT","drawCustom","geometries","getGeometries","getGeometriesArray","lineStringReplay","LINE_STRING","drawLineString","drawMultiLineString","polygonReplay","POLYGON","drawMultiPolygon","imageReplay","IMAGE","setImageStyle","drawPoint","drawMultiPoint","drawPolygon","hasArea","ratio","opt_size","toSize","isArray","_reproj_common_js__WEBPACK_IMPORTED_MODULE_0__","_ImageCanvas_js__WEBPACK_IMPORTED_MODULE_1__","_LayerType_js__WEBPACK_IMPORTED_MODULE_2__","_ViewHint_js__WEBPACK_IMPORTED_MODULE_3__","_array_js__WEBPACK_IMPORTED_MODULE_4__","_extent_js__WEBPACK_IMPORTED_MODULE_5__","_layer_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_6__","_obj_js__WEBPACK_IMPORTED_MODULE_7__","_Map_js__WEBPACK_IMPORTED_MODULE_8__","_IntermediateCanvas_js__WEBPACK_IMPORTED_MODULE_9__","_transform_js__WEBPACK_IMPORTED_MODULE_10__","CanvasImageLayerRenderer","IntermediateCanvasRenderer","imageLayer","image_","imageTransform_","skippedFeatures_","vectorRenderer_","VECTOR","ctor","disposeInternal","dispose","getImageTransform","viewCenter","viewResolution","imageSource","getSource","hints","viewHints","vectorRenderer","renderedExtent","ANIMATING","INTERACTING","sourceProjection","getProjection","skippedFeatures","imageFrameState","newSkippedFeatures","keys","skippedFeatureUids","sort","replayGroupChanged","compose","imageExtent","imageResolution","imagePixelRatio","getPixelRatio","coordinateToCanvasPixelTransform","getRenderMode","mapRenderer","shared","_color_js__WEBPACK_IMPORTED_MODULE_0__","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","color","colorString","clear","expire","iconImage","get","set","setSize","maxCacheSize","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","LRUCache","EventTarget","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","getCount","CLEAR","containsKey","hasOwnProperty","forEach","f","entry","value_","key_","newer","older","remove","getKeys","getValues","values","peekLast","peekLastKey","peekFirstKey","pop","replace","value","prune","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","RBush_RBush","opt_maxEntries","rbush_","rbush_default","items_","insert","item","extents","items","l","uid","update","bbox","getAll","all","getInExtent","search","forEach_","forEachInExtent","result","isEmpty","ol_obj","data","toJSON","concat","rbush","structs_RBush","VectorSourceEvent","opt_feature","Vector_VectorSource","Source","VectorSource","state","loader_","format_","format","overlaps_","overlaps","url_","loader","featureloader","strategy_","strategy","loadingstrategy","collection","features","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","getArray","Collection","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","getGeometry","handleFeatureChange_","ObjectEventType","PROPERTYCHANGE","valid","id","getId","addFeatures","newFeatures","geometryFeatures","i$1","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","evt","CollectionEventType","ADD","REMOVE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","closestPoint","NaN","minSquaredDistance","Infinity","filter","previousMinSquaredDistance","closestPointXY","minDistance","sqrt","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","loadFeatures","this$1","loadedExtentsRtree","extentsToLoad","loop","extentToLoad","alreadyLoaded","object","slice","removeLoadedExtent","removed","setLoader","source_Source","RegularShape_RegularShape","ImageStyle","RegularShape","rotateWithView","opacity","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","points_","points","radius_","radius","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","render_","clone","getPoints","getRadius","getRadius2","getAngle","getRotation","getRotateWithView","setOpacity","getOpacity","setScale","getScale","getAnchor","getHitDetectionImage","getImageSize","getHitDetectionImageSize","getSize","imageSize","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","colorlike","getWidth","getLineDash","getLineDashOffset","has","getLineJoin","getLineCap","getMiterLimit","renderOptions","dom","draw_","createHitDetectionCanvas_","round","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","getChecksum","info","add","offsetY","hitImage","angle0","radiusC","setTransform","translate","arc","PI","cos","sin","lineWidth","setLineDash","closePath","ol_color","strokeChecksum","fillChecksum","recalculate","checksum","Image","style_RegularShape","CircleStyle","setRadius","toFunction","createDefaultStyle","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer_","text_","text","zIndex_","zIndex","styleFunction","styles","setRenderer","setFill","setImage","setStroke","setText","setZIndex","defaultStyles","Fill","Stroke","IconAnchorUnits","FRACTION","PIXELS","IconImage_IconImage","IconImage","hitDetectionImage_","document","createElement","color_","imageListenerKeys_","imageState_","src_","tainted_","isTainted_","drawImage","getImageData","e","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","LOADING","LOAD","ctx","getContext","imgData","r","g","putImageData","Target","IconOrigin","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_RIGHT","Icon_Icon","Icon","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","offset_","offset","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","style_Image","_tileurlfunction_js__WEBPACK_IMPORTED_MODULE_0__","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_net_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_State_js__WEBPACK_IMPORTED_MODULE_5__","_TileImage_js__WEBPACK_IMPORTED_MODULE_6__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_7__","TileJSON","tileJSON_","jsonp","handleTileJSONResponse","handleTileJSONError","client","XMLHttpRequest","addEventListener","onXHRLoad_","onXHRError_","open","send","tileJSON","status","response","JSON","parse","responseText","err","getTileJSON","epsg4326Projection","getAttributions","attributionExtent","setAttributions","setState","UNDEFINED","getDistance","_math_js__WEBPACK_IMPORTED_MODULE_0__","DEFAULT_RADIUS","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","distance","bearing","lon1","dByR","lat","asin","lon","_coordinate_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_2__","_extent_js__WEBPACK_IMPORTED_MODULE_3__","_Layer_js__WEBPACK_IMPORTED_MODULE_4__","_transform_js__WEBPACK_IMPORTED_MODULE_5__","hitCanvasContext_","clipped","imageTransform","alpha","globalAlpha","dx","dy","dw","dh","restore","pixel","clearRect","imageData","_color_js__WEBPACK_IMPORTED_MODULE_1__","checksum_","setColor","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","disable","none","createSnapToN","createSnapToZero","delta","n","theta","opt_tolerance","abs","Map_MapRenderer","Disposable","MapRenderer","map_","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","apply","calculateMatrices2D","pixelToCoordinateTransform","removeLayerRenderers","removeLayerRendererByKey_","layerFilter","thisArg2","managed","layerStates","translatedCoordinate","canWrapX","layerStatesArray","numLayers","layerRenderer","getLayerRenderer","getWrapX","forEachLayerAtPixel","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","getMap","removeUnusedLayerRenderers_","renderFrame","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","ol_Disposable","expireIconCache","sortByZIndex","state1","state2","Map","layerRendererConstructors","Map_CanvasMapRenderer","CanvasMapRenderer","container","getViewport","context_","display","className","css","insertBefore","childNodes","renderedVisible_","vectorContext","sourceState","calculateSourceResolution","sourceProj","targetProj","targetCenter","targetResolution","sourceCenter","ol_proj","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","arr","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","target","x0","y0","x1","y1","x2","y2","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","p1","p2","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isGlobal","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","Tile_ReprojTile","Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","pixelRatio_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","EMPTY","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad","sourceListenKey","setTimeout","ol_Tile","reproj_Tile","Tile_TileSource","TileSource","opaque_","tilePixelRatio_","tileCache","TileCache","tmpSize","tileOptions","getTileCacheForProjection","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTileGrid","getTileGridForProjection","ol_tilegrid","thisProj","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","refresh","TileSourceEvent","source_Tile","TileEventType","TILELOADSTART","TILELOADEND","TILELOADERROR","UrlTile_UrlTile","UrlTile","generateTileUrlFunction_","tileurlfunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","handleTileChange","tileState","ABORT","setTileLoadFunction","pruneExceptNewestZ","join","source_UrlTile","TileImage_TileImage","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","cache","newTile","getTileInternal","interimTile","refreshInterimChain","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","imageTile","createFromTemplates","nullTileUrlFunction","expandUrl","_math_js__WEBPACK_IMPORTED_MODULE_1__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_2__","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getHeight","templates","len","tileUrlFunctions","createFromTileUrlFunctions","h","index","match","exec","charCode","startCharCode","charCodeAt","stopCharCode","fromCharCode","stop","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","reset","setFromArray","invert","tmp_","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","det","determinant","mat","createSnapToResolutions","createSnapToPower","_array_js__WEBPACK_IMPORTED_MODULE_0__","direction","power","opt_maxLevel","oldLevel","log","newLevel","opacity_","rotateWithView_","rotation_","scale_","getSnapToPixel","setRotateWithView","setRotation","setSnapToPixel","snapToPixel","padNumber","number","opt_precision","numberString","toFixed","decimal","indexOf","_LayerType_js__WEBPACK_IMPORTED_MODULE_1__","_TileState_js__WEBPACK_IMPORTED_MODULE_2__","_dom_js__WEBPACK_IMPORTED_MODULE_4__","_events_js__WEBPACK_IMPORTED_MODULE_5__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_6__","rbush__WEBPACK_IMPORTED_MODULE_7__","rbush__WEBPACK_IMPORTED_MODULE_7___default","_extent_js__WEBPACK_IMPORTED_MODULE_8__","_layer_VectorTileRenderType_js__WEBPACK_IMPORTED_MODULE_9__","_proj_js__WEBPACK_IMPORTED_MODULE_10__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_11__","_render_ReplayType_js__WEBPACK_IMPORTED_MODULE_12__","_render_canvas_js__WEBPACK_IMPORTED_MODULE_13__","_render_canvas_ReplayGroup_js__WEBPACK_IMPORTED_MODULE_14__","_render_replay_js__WEBPACK_IMPORTED_MODULE_15__","_TileLayer_js__WEBPACK_IMPORTED_MODULE_16__","_vector_js__WEBPACK_IMPORTED_MODULE_17__","_transform_js__WEBPACK_IMPORTED_MODULE_18__","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","vector","CanvasVectorTileLayerRenderer","CanvasTileLayerRenderer","declutterTree_","getDeclutter","dirty_","renderedLayerRevision_","tmpTransform_","renderMode","zDirection","handleFontsChanged_","createReplayGroup_","renderTileImage_","getTileImage","tileLayer","layerRevision","getRevision","renderedTiles","revision","renderOrder","getRenderOrder","replayState","getReplayState","dirty","renderedRevision","renderedRenderOrder","tileExtent","t","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","getRenderBuffer","tmpExtent","tileProjection","reproject","setProjection","getStyleFunction","getUnits","TILE_PIXELS","setWorldExtent","setExtent","finish","setReplayGroup","found","getReplayGroup","getReplayTransform_","renderResolution","handleStyleImageChange_","declutterReplays","replayTypes","clips","zs","worldOffset","hasReplays","currentClip","getClipCoords","replays","renderedTileRevision","pixelScale","VECTOR_TILE","_TileRange_js__WEBPACK_IMPORTED_MODULE_2__","_TileState_js__WEBPACK_IMPORTED_MODULE_3__","_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__","_dom_js__WEBPACK_IMPORTED_MODULE_5__","_extent_js__WEBPACK_IMPORTED_MODULE_6__","_IntermediateCanvas_js__WEBPACK_IMPORTED_MODULE_7__","_transform_js__WEBPACK_IMPORTED_MODULE_8__","opt_noContext","oversampling_","renderedExtent_","newTiles_","tmpTileRange_","isDrawableTile_","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","getInterimTile","sourceRevision","oversampling","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","Date","now","time","inTransition","getAlpha","childTileRange","tilePixelSize","currentResolution","currentScale","currentTilePixelSize","tileGutter","tilesToDraw","w","getTileCoord","drawTileImage","alphaChanged","animate","endTransition","TILE","_XYZ_js__WEBPACK_IMPORTED_MODULE_0__","ATTRIBUTION","OSM","_ViewHint_js__WEBPACK_IMPORTED_MODULE_2__","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_4__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_5__","rbush__WEBPACK_IMPORTED_MODULE_6__","rbush__WEBPACK_IMPORTED_MODULE_6___default","_extent_js__WEBPACK_IMPORTED_MODULE_7__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_8__","_render_canvas_js__WEBPACK_IMPORTED_MODULE_9__","_render_canvas_ReplayGroup_js__WEBPACK_IMPORTED_MODULE_10__","_Layer_js__WEBPACK_IMPORTED_MODULE_11__","_vector_js__WEBPACK_IMPORTED_MODULE_12__","CanvasVectorLayerRenderer","vectorLayer","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","startX","world","mainContextAlpha","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","DROP","_obj_js__WEBPACK_IMPORTED_MODULE_1__","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_3__","BaseObject","projection_","attributions_","adaptAttributions","attributionsCollapsible_","state_","wrapX_","getAttributionsCollapsible","attributionLike"],"mappings":"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","file":"js/chunk-0061eb4d.5923208d.js","sourcesContent":["/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.3';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        /**\n         * @param {import(\"../Tile.js\").default} tile Tile.\n         */\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, import(\"../TileRange.js\").default>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {abstract} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../transform.js\").Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/ReplayGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/ReplayGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this.vectorRenderer_ = /** @type {import(\"./VectorLayer.js\").default} */ (new ctor(imageLayer));\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {import(\"../../layer/Vector.js\").default} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasImageLayerRenderer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {import(\"../../layer/Image.js\").default} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector.VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string|number>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./AtlasManager.js\").default|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {import(\"./AtlasManager.js\").default|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return /** @type {string} */ (this.checksums_[0]);\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./AtlasManager.js\").default} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = /*@__PURE__*/(function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /*@__PURE__*/(function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /*@__PURE__*/(function (TileImage) {\n  function TileJSON(options) {\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\n    return this.tileJSON_;\n  };\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  };\n\n  /**\n   * @protected\n   */\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n  return TileJSON;\n}(TileImage));\n\n\nexport default TileJSON;\n\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {abstract} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar IntermediateCanvasRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      if (dw >= 0.5 && dh >= 0.5) {\n        context.drawImage(image, 0, 0, +image.width, +image.height,\n          Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      }\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @return {!import(\"../../transform.js\").Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    var color = this.color_;\n    if (color) {\n      if (Array.isArray(color) || typeof color == 'string') {\n        this.checksum_ = 'f' + asString(/** @type {import(\"../color.js\").Color|string} */ (color));\n      } else {\n        this.checksum_ = getUid(this.color_);\n      }\n    } else {\n      this.checksum_ = 'f-';\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_);\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"./Layer.js\").default>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<typeof import(\"./Layer.js\").default>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = /** @type {import(\"../layer/Layer.js\").default} */ (layer).getSource();\n        if (source) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Base.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    for (var layerKey in this.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<typeof import(\"../Layer.js\").default>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      var layer = layerState.layer;\n      var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {import(\"./Layer.js\").default} */ (this.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction, this.key_);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/ReplayType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    var renderMode = layer.getRenderMode();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = renderMode === VectorTileRenderType.VECTOR ? 1 : 0;\n\n    if (renderMode !== VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(/** @type {import(\"../../VectorImageTile.js\").default} */ (tile), pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return /** @type {import(\"../../VectorImageTile.js\").default} */ (tile).getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorImageTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {import(\"../../VectorImageTile.js\").default} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer, tileCoord.toString()));\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorImageTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = /** @type {CanvasReplayGroup} */ (sourceTile.getReplayGroup(layer,\n          tile.tileCoord.toString()));\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorTileLayerRenderer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {import(\"../../layer/VectorTile.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile_(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if ((this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) ||\n              this.renderedRevision != sourceRevision) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasTileLayerRenderer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {import(\"../../layer/Tile.js\").default} */ (layer));\n};\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ReplayGroup.js\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {import(\"../../extent.js\").Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/ReplayGroup.js\").default} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {import(\"../../layer/Layer.js\").default} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {import(\"../Map.js\").default} mapRenderer The map renderer.\n * @param {import(\"../../layer/Layer.js\").default} layer The layer to be rendererd.\n * @return {CanvasVectorLayerRenderer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {import(\"../../layer/Vector.js\").default} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} projection\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Aattributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}