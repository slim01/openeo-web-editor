{"version":3,"sources":["webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/geom/LineString.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/geom/flat/center.js","webpack:///./node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/control/ScaleLine.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/format/Feature.js","webpack:///./node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/control/FullScreen.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/Circle.js","webpack:///./node_modules/ol/geom/flat/segments.js"],"names":["__webpack_require__","d","__webpack_exports__","drawTextOnPath","_math_js__WEBPACK_IMPORTED_MODULE_0__","flatCoordinates","offset","end","stride","text","measure","startM","maxAngle","result","reverse","numChars","length","x1","y1","data","index","previousAngle","x2","y2","segmentM","segmentLength","Math","sqrt","pow","chunk","chunkLength","i","char","charAt","charLength","charM","segmentPos","angle","atan2","PI","undefined","delta","abs","interpolate","x","Object","y","unshift","push","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","_extent_js__WEBPACK_IMPORTED_MODULE_0__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_1__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_3__","_flat_area_js__WEBPACK_IMPORTED_MODULE_4__","_flat_closest_js__WEBPACK_IMPORTED_MODULE_5__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_7__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_8__","LinearRing","SimpleGeometry","coordinates","opt_layout","call","this","maxDelta_","maxDeltaRevision_","Array","isArray","setCoordinates","setFlatCoordinates","__proto__","prototype","create","constructor","clone","slice","layout","closestPointXY","closestPoint","minSquaredDistance","getExtent","getRevision","getArea","getCoordinates","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","XY","getType","LINEAR_RING","intersectsExtent","extent","setLayout","changed","altKeyOnly","altShiftKeysOnly","focus","always","click","mouseActionButton","never","pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","mouseOnly","primaryAction","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_has_js__WEBPACK_IMPORTED_MODULE_3__","mapBrowserEvent","originalEvent","altKey","metaKey","ctrlKey","shiftKey","event","target","getTargetElement","document","activeElement","type","button","SINGLECLICK","tagName","pointerEvent","pointerType","isPrimary","createCanvasContext2D","opt_width","opt_height","canvas","createElement","width","height","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","getInteriorPointOfArray","getInteriorPointsOfMultiArray","_array_js__WEBPACK_IMPORTED_MODULE_0__","_contains_js__WEBPACK_IMPORTED_MODULE_1__","ends","flatCenters","flatCentersOffset","opt_dest","ii","intersections","r","rr","pointX","NaN","maxSegmentLength","Infinity","sort","isNaN","endss","interiorPoints","boundingExtent","buffer","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extend","extendCoordinate","extendFlatCoordinates","forEachCorner","getBottomLeft","getBottomRight","getCenter","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","intersects","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","_boundingExtentXYs","xs","ys","opt_extent","minX","min","apply","minY","maxX","max","maxY","value","dx","dy","coordinate","extent1","extent2","relationship","extendCoordinates","extendXY","callback","opt_this","val","area","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","Disposable","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","indexOf","dispatchEvent","evt","propagate","propagationStopped","pendingRemovals","removeEventListener","disposeInternal","getListeners","hasListener","opt_type","keys","splice","UP","DOWN","douglasPeucker","douglasPeuckerArray","snap","quantizeArray","quantizeMultiArray","simplifiedOffset","n","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance","i$1","simplifiedEnds","tolerance","round","quantize","dx1","dy1","dx2","dy2","simplifiedEndss","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","bindListener","listenerObj","boundListener","bindTo","callOnce","findListener","opt_setDeleteIndex","deleteIndex","listenerMap","getListenerMap","opt_create","ol_lm","removeListenerMap","removeListeners","opt_once","key","ARRAY_BUFFER","JSON","TEXT","XML","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","outside","wn","_functions_js__WEBPACK_IMPORTED_MODULE_0__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_4__","Control","BaseObject","options","element","target_","map_","listenerKeys","render","setTarget","getMap","setMap","map","getOverlayContainerStopEvent","appendChild","POSTRENDER","getElementById","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_2__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__","_LineString_js__WEBPACK_IMPORTED_MODULE_4__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_5__","_flat_closest_js__WEBPACK_IMPORTED_MODULE_6__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_7__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_8__","_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_9__","_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_10__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_11__","MultiLineString","opt_ends","ends_","getLayout","lineStrings","lineString","getFlatCoordinates","appendLineString","getCoordinateAtM","m","opt_extrapolate","opt_interpolate","XYM","XYZM","extrapolate","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","MULTI_LINE_STRING","tmp","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","right","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","XYZ","TRUE","FALSE","VOID","lineStringLength","fromExtent","fromCircle","makeRegular","_LinearRing_js__WEBPACK_IMPORTED_MODULE_4__","_Point_js__WEBPACK_IMPORTED_MODULE_5__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_6__","_flat_area_js__WEBPACK_IMPORTED_MODULE_8__","_flat_closest_js__WEBPACK_IMPORTED_MODULE_9__","_flat_contains_js__WEBPACK_IMPORTED_MODULE_10__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_11__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_12__","_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_13__","_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_14__","_flat_orient_js__WEBPACK_IMPORTED_MODULE_15__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_16__","_math_js__WEBPACK_IMPORTED_MODULE_17__","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","POLYGON","circle","opt_sides","opt_angle","sides","getStride","arrayLength","j","polygon","getRadius","radius","startAngle","asString","asArray","toString","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","color","fromNamed","el","style","body","rgb","getComputedStyle","fromString","MAX_CACHE_SIZE","cache","cacheSize","s","hasOwnProperty","fromStringInternal_","g","b","a","exec","hasAlpha","parseInt","substr","split","Number","normalize","createExtent","none","xhr","_format_FormatType_js__WEBPACK_IMPORTED_MODULE_1__","loadFeaturesXhr","url","format","success","failure","projection","XMLHttpRequest","open","responseType","onload","status","source","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","bind","onerror","send","features","dataProjection","sourceOrTile","addFeatures","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__","_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_8__","_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_9__","_flat_length_js__WEBPACK_IMPORTED_MODULE_10__","_flat_segments_js__WEBPACK_IMPORTED_MODULE_11__","_flat_simplify_js__WEBPACK_IMPORTED_MODULE_12__","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAt","fraction","getLength","getFlatMidpoint","LINE_STRING","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","linearRingss","ol_extent","MultiPolygon_MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","jj","array","appendPolygon","len","newEndss","closest","contains","flat_area","orient","inflate","getEndss","getFlatInteriorPoints","interiorpoint","getInteriorPoints","MultiPoint","GeometryLayout","simplify","getPolygon","prevEnds","getPolygons","GeometryType","MULTI_POLYGON","intersectsextent","deflate","lastEnds","geom_SimpleGeometry","_util_js__WEBPACK_IMPORTED_MODULE_0__","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_5__","_transform_js__WEBPACK_IMPORTED_MODULE_6__","tmpTransform","Geometry","extent_","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","getClosestPoint","point","opt_closestPoint","intersectsCoordinate","computeExtent","rotate","anchor","scale","sx","opt_sy","opt_anchor","getSimplifiedGeometry","translate","transform","destination","sourceProj","getUnits","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","Attribution_Attribution","Attribution","opt_options","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","className","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","setAttribute","title","events","EventType","handleClick_","cssClasses","css","renderedAttributions_","renderedVisible_","collectSourceAttributions_","frameState","lookup","visibleAttributions","layerStatesArray","viewState","layerState","Layer","getSource","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","visible","display","dom","innerHTML","preventDefault","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","control_Control","mapEvent","control_Attribution","Rotate_Rotate","Rotate","Rotate_render","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","resetNorth_","view","getView","getRotation","animate","easing","setRotation","remove","msTransform","webkitTransform","control_Rotate","Zoom_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentResolution","getResolution","newResolution","constrainResolution","getAnimating","cancelAnimations","setResolution","control_Zoom","defaults","controls","Collection","zoomControl","zoom","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","t","squaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","_Point_js__WEBPACK_IMPORTED_MODULE_3__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_5__","_flat_inflate_js__WEBPACK_IMPORTED_MODULE_6__","_math_js__WEBPACK_IMPORTED_MODULE_7__","appendPoint","multiPoint","getPoint","getPoints","points","MULTI_POINT","transformGeom2D","_Geometry_js__WEBPACK_IMPORTED_MODULE_2__","_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__","_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","_obj_js__WEBPACK_IMPORTED_MODULE_5__","getFirstCoordinate","getLastCoordinate","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","sy","simpleGeometry","_Object_js__WEBPACK_IMPORTED_MODULE_0__","_Control_js__WEBPACK_IMPORTED_MODULE_2__","_css_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_5__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_6__","UNITS_PROP","Units","DEGREES","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","get","units","set","pointResolutionUnits","METERS","pointResolution","getMetersPerUnit","nominalCount","suffix","metersPerDegree","count","floor","log","html","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","obj","linearFindNearest","direction","reverseSubArray","begin","extension","arr1","arr2","len1","stableSort","compareFnc","isSorted","opt_func","opt_strict","compare","every","currentVal","res","Feature_FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","util","readFeature","readGeometry","writeFeature","feature","writeFeatures","writeGeometry","geometry","format_Feature","transformWithOptions","write","transformed","proj","decimals","power","JSONFeature_JSONFeature","FeatureFormat","JSONFeature","FormatType","readFeatureFromObject","getObject","readFeaturesFromObject","object","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","format_JSONFeature","GeometryCollection_GeometryCollection","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","cloneGeometries","getGeometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","GEOMETRY_COLLECTION","geom_Geometry","clonedGeometries","geom_GeometryCollection","GeoJSON_GeoJSON","GeoJSON","geometryName_","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","properties","GeoJSON_readGeometry","Feature","setGeometryName","setGeometry","setId","setProperties","geoJSONObject","geoJSONFeatureCollection","geoJSONFeatures","crs","asserts","id","getId","getGeometry","GeoJSON_writeGeometry","getProperties","getGeometryName","objects","POINT","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","Error","Point","geoJSON","writePointGeometry","writeLineStringGeometry","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","CIRCLE","rightHanded","closestOnCircle","closestOnSegment","distance","squaredDistanceToSegment","segment","along","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","pointY","cumulativeLengths","o","lo","hi","m0","m1","twiceArea","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","transform2D","dest","anchorX","anchorY","k","_Control_js__WEBPACK_IMPORTED_MODULE_0__","_css_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_2__","_events_js__WEBPACK_IMPORTED_MODULE_3__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_4__","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","isFullScreen","isFullScreenSupported","keys_","source_","handleFullScreen_","exitFullScreen","requestFullScreenWithKeys","requestFullScreen","handleFullScreenChange_","updateSize","fullscreen","activeClassName","inactiveClassName","nextClassName","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","mozRequestFullScreenWithKeys","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","intersectsLineString","intersectsLineStringArray","intersectsLinearRingArray","intersectsLinearRingMultiArray","_segments_js__WEBPACK_IMPORTED_MODULE_2__","coordinatesExtent","point1","point2","intersectsLinearRing","easeIn","easeOut","inAndOut","linear","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","stopPropagation","Event","asColorLike","_color_js__WEBPACK_IMPORTED_MODULE_0__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","Circle","opt_radius","setCenterAndRadius","getRadiusSquared_","circleExtent","setCenter","setRadius","forEach","ret"],"mappings":"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","file":"js/chunk-0026d950.84679570.js","sourcesContent":["/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent)|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default)|function(this:import(\"./source/Vector\").default)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    return false;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = /*@__PURE__*/(function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (Array.isArray(geometry)) {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    } else {\n      transformed = (write ? /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined &&\n    !Array.isArray(transformed)) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {import(\"../geom/Geometry\").default} */ (geometry).clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /*@__PURE__*/(function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties']);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, false, opt_options));\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (transformWithOptions(geometry, true, opt_options));\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nvar getChangeType = (function() {\n  var changeType;\n  return function() {\n    if (!changeType) {\n      var body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /*@__PURE__*/(function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    listen(this.button_, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  FullScreen.prototype.setClassName_ = function setClassName_ (element, fullscreen) {\n    var activeClassName = this.cssClassName_ + '-true';\n    var inactiveClassName = this.cssClassName_ + '-false';\n    var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map"],"sourceRoot":""}